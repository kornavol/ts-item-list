{"version":3,"sources":["pages/MarketPlace/ItemsList/style.ts","assets/pictures/no-img-layout.png","assets/pictures/no-results.png","components/messages/style.ts","components/messages/EmptySearchMsg.tsx","pages/MarketPlace/ItemsList/index.tsx","components/Search/style.ts","components/Search/index.tsx","pages/MarketPlace/index.tsx","App.tsx","index.tsx"],"names":["ItemsListStyles","makeStyles","theme","root","skeleton","display","justifyContent","flexDirection","alignItems","width","margin","overflow","skeletonImg","boxSizing","ItemStyles","boxShadow","img","EmptySearchMsg","maxWidth","marginTop","message","fontFamily","text","color","classes","style","motion","div","initial","opacity","animate","transition","duration","className","src","picture","alt","Item","item","images","map","i","object_url","Grid","xs","sm","md","noPicture","product_name","id","ItemsList","items","meta","searchTerm","console","log","skeletons","Array","limit","el","Skeleton","variant","height","sx","marginBottom","list","filter","toLowerCase","includes","container","spacing","length","Search","styled","position","border","borderRadius","shape","backgroundColor","alpha","palette","common","white","breakpoints","down","marginLeft","marginRight","SearchIconWrapper","padding","pointerEvents","StyledInputBase","InputBase","paddingLeft","transitions","create","value","setValue","placeholder","inputProps","onChange","e","target","MarketPlace","useState","setItems","cursor","setMeta","hasMoreData","setHasMoreData","isLoading","setIsLoading","setSearchTerm","compare","a","b","first","split","second","GetItems","options","method","headers","body","JSON","stringify","fetch","result","json","respond","data","newMeta","sort","localeCompare","prev","concat","Object","assign","useEffect","Box","LoadingButton","loading","loadingIndicator","Button","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f8a30391.chunk.js","sourcesContent":["import { makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport { styled, alpha } from \"@mui/material/styles\";\r\n\r\nexport const ItemsListStyles = makeStyles((theme: Theme) => ({\r\n  root: {},\r\n  skeleton: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n    margin: \"1vw\",\r\n    overflow: \"hidden\",\r\n  },\r\n  skeletonImg: {\r\n    boxSizing: \"content-box\",\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n}));\r\n\r\nexport const ItemStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    margin: \"1vw\",\r\n    boxShadow: \"0px 0px 5px 2px rgba(0,0,0,0.3)\",\r\n  },\r\n  img: {\r\n    boxSizing: \"border-box\",\r\n    width: \"100%\",\r\n  },\r\n}));\r\n","export default __webpack_public_path__ + \"static/media/no-img-layout.097c93a9.png\";","export default __webpack_public_path__ + \"static/media/no-results.7c9a412b.png\";","import { makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nexport const EmptySearchMsg = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n    margin: \"1vw\",\r\n    overflow: \"hidden\",\r\n  },\r\n  img: {\r\n    maxWidth: 400,\r\n    width: \"40%\",\r\n    marginTop: \"2rem\",\r\n  },\r\n  message: {\r\n    fontFamily: \"Lucida Console, Times, Sans-serif \",\r\n    margin: \"1rem\",\r\n  },\r\n  text: {\r\n    color: \"red\",\r\n  },\r\n}));\r\n","import React, { FC } from \"react\";\r\n\r\nimport { motion } from \"framer-motion\";\r\nimport picture from \"../../assets/pictures/no-results.png\";\r\nimport { EmptySearchMsg as style } from \"./style\";\r\n\r\ninterface IProps {\r\n  text: string;\r\n}\r\n\r\nconst EmptySearchMsg: FC<IProps> = ({ text }) => {\r\n  const classes = style();\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      transition={{ duration: 1 }}\r\n      className={classes.root}\r\n    >\r\n      <img className={classes.img} src={picture} alt=\"no-results\" />\r\n      <h4 className={classes.message}>\r\n        No result found for <span className={classes.text}>{text}</span> product\r\n      </h4>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default EmptySearchMsg;\r\n","import React, { FC } from \"react\";\r\n\r\nimport { Grid, Skeleton } from \"@mui/material\";\r\nimport { motion } from \"framer-motion\";\r\nimport { ItemsListStyles, ItemStyles } from \"./style\";\r\nimport noPicture from \"../../../assets/pictures/no-img-layout.png\";\r\n\r\nimport EmptySearchMsg from \"../../../components/messages/EmptySearchMsg\";\r\n\r\nimport { CurrMeta } from \"../../../interfaces\";\r\n\r\nconst Item: FC<any> = ({ item }) => {\r\n  const classes = ItemStyles();\r\n  const images = item.images?.map((img: any, i: number) => (\r\n    <img key={i} src={img?.object_url} alt=\"product\" className={classes.img} />\r\n  ));\r\n\r\n  return (\r\n    <Grid item key={item.id} xs={12} sm={6} md={3}>\r\n      <motion.div\r\n        className={classes.root}\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        transition={{ duration: 1 }}\r\n      >\r\n        {images || (\r\n          <img src={noPicture} alt=\"no-image\" className={classes.img} />\r\n        )}\r\n        <p>{item.product_name}</p>\r\n      </motion.div>\r\n    </Grid>\r\n  );\r\n};\r\n\r\ninterface IProps {\r\n  items: any[];\r\n  meta: CurrMeta;\r\n  searchTerm: string;\r\n}\r\n\r\nconst ItemsList: FC<IProps> = ({ items, meta, searchTerm }) => {\r\n  const classes = ItemsListStyles();\r\n\r\n  console.log(items);\r\n  \r\n\r\n  const skeletons: JSX.Element[] = [...Array(meta.limit)].map((el, i) => (\r\n    <Grid item key={i} xs={12} sm={6} md={3}>\r\n      <div className={classes.skeleton}>\r\n        <div className={classes.skeletonImg}>\r\n          <Skeleton variant=\"rectangular\" width={300} height={300} />\r\n        </div>\r\n        <div>\r\n          <Skeleton\r\n            variant=\"text\"\r\n            width={300}\r\n            height={40}\r\n            sx={{ marginBottom: \"-5px\" }}\r\n          />\r\n          <Skeleton variant=\"text\" width={150} height={40} />\r\n        </div>\r\n      </div>\r\n    </Grid>\r\n  ));\r\n\r\n  const list: JSX.Element[] = items\r\n    .filter((item: any) => {\r\n      if (searchTerm === \"\") {\r\n        return item;\r\n      } else if (\r\n        item.product_name.toLowerCase().includes(searchTerm.toLowerCase())\r\n      ) {\r\n        return item;\r\n      }\r\n    })\r\n    .map((item: any) => <Item key={item.id} item={item} />);\r\n\r\n  return (\r\n    <Grid container spacing={1}>\r\n      {items.length > 0 ? (\r\n        list.length > 0 ? (\r\n          list\r\n        ) : (\r\n          <EmptySearchMsg text={searchTerm} />\r\n        )\r\n      ) : (\r\n        skeletons\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ItemsList;\r\n","import { styled, alpha } from \"@mui/material/styles\";\r\nimport InputBase from \"@mui/material/InputBase\";\r\n\r\nexport const Search = styled(\"div\")(({ theme }) => ({\r\n  position: \"relative\",\r\n  border: \"1px solid #808080\",\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n  \"&:hover\": {\r\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n  },\r\n  margin: \"10px 5% 10px auto\",\r\n  [theme.breakpoints.down(\"md\")]: {\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    width: \"50%\",\r\n  },\r\n}));\r\n\r\nexport const SearchIconWrapper = styled(\"div\")(({ theme }) => ({\r\n  padding: theme.spacing(0, 2),\r\n  height: \"100%\",\r\n  position: \"absolute\",\r\n  pointerEvents: \"none\",\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n}));\r\n\r\nexport const StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n  color: \"inherit\",\r\n  \"& .MuiInputBase-input\": {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n  },\r\n}));\r\n","import React, { FC } from \"react\";\r\nimport {\r\n  Search as SearchComp,\r\n  SearchIconWrapper,\r\n  StyledInputBase,\r\n} from \"./style\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\n\r\ninterface Iprops {\r\n  value: string;\r\n  setValue: React.Dispatch<React.SetStateAction<string>>\r\n}\r\n\r\nconst Search: FC<Iprops> = ({value, setValue }) => {\r\n\r\n  return (\r\n    <SearchComp>\r\n      <SearchIconWrapper>\r\n        <SearchIcon />\r\n      </SearchIconWrapper>\r\n      <StyledInputBase\r\n        placeholder=\"Search by product name\"\r\n        inputProps={{ \"aria-label\": \"search\" }}\r\n        value={value}\r\n        onChange={(e:React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => setValue(e.target.value)}\r\n      />\r\n    </SearchComp>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, { FC, useState, useEffect } from \"react\";\r\n\r\nimport { Box, Button, Skeleton } from \"@mui/material\";\r\nimport LoadingButton from \"@mui/lab/LoadingButton\";\r\n\r\nimport ItemsList from \"./ItemsList\";\r\nimport Search from \"../../components/Search\";\r\n\r\nimport { CurrMeta } from \"../../interfaces\";\r\n\r\nconst MarketPlace: FC = () => {\r\n  const [items, setItems] = useState<any[]>([]);\r\n  const [meta, setMeta] = useState<CurrMeta>({\r\n    cursor: 0,\r\n    limit: 4,\r\n  });\r\n  const [hasMoreData, setHasMoreData] = useState<boolean>(true);\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n  const [searchTerm, setSearchTerm] = useState<string>(\"\");\r\n\r\n  function compare(a: any, b: any): number {\r\n    const first = a.product_name.split(\" \");\r\n    const second = b.product_name.split(\" \");\r\n\r\n    if (first[0] === second[0]) {\r\n      return first[1] - second[1];\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n\r\n  async function GetItems(meta: CurrMeta) {\r\n    const url: string =\r\n      \"https://asterix-dev.concular.com/material-service/marketplace/mp\";\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(meta),\r\n    };\r\n\r\n    const result = await fetch(url, options);\r\n    const respond = await result.json();\r\n\r\n    setIsLoading(() => false);\r\n    const data: any[] = respond.data?.data;\r\n    const newMeta: any = respond.data.meta;\r\n\r\n    data\r\n      .sort((a, b) => a.product_name.localeCompare(b.product_name))\r\n      .sort(compare);\r\n\r\n    setHasMoreData(newMeta.hasMoreData);\r\n    delete newMeta.hasMoreData;\r\n    setItems((prev: any[]) => prev.concat(data));\r\n    setMeta((prev: CurrMeta) => Object.assign(prev, newMeta));\r\n  }\r\n\r\n  useEffect(() => {\r\n    GetItems(meta);\r\n  }, []);\r\n\r\n  return (\r\n    <Box\r\n      maxWidth={\"1480px\"}\r\n      sx={{ display: \"flex\", alignItems: \"center\", flexDirection: \"column\" }}\r\n    >\r\n      {<Search value={searchTerm} setValue={setSearchTerm} />}\r\n      <ItemsList items={items} meta={meta} searchTerm={searchTerm} />\r\n      {hasMoreData ? (\r\n        items.length > 0 ? (\r\n          isLoading ? (\r\n            <LoadingButton\r\n              style={{ margin: \"15px\" }} //ch\r\n              loading\r\n              loadingIndicator=\"Loading...\"\r\n              variant=\"outlined\"\r\n            >\r\n              Fetch data\r\n            </LoadingButton>\r\n          ) : (\r\n            <Button\r\n              style={{ margin: \"15px\" }} //ch\r\n              variant=\"contained\"\r\n              onClick={() => {\r\n                setIsLoading(true);\r\n                GetItems(meta);\r\n                setSearchTerm(\"\");\r\n              }}\r\n            >\r\n              Load more\r\n            </Button>\r\n          )\r\n        ) : (\r\n          <Skeleton variant=\"rectangular\" width={100} height={33} />\r\n        )\r\n      ) : null}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MarketPlace;\r\n","import React, { FC } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nimport \"./App.css\";\r\nimport logo from \"./logo.svg\";\r\nimport MarketPlace from \"./pages/MarketPlace\";\r\n\r\n\r\nconst App: FC = () => {\r\n  return (\r\n    <div className=\"App-root\">\r\n      <motion.div\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        transition={{ duration: 1 }}\r\n        style={{ width: \"100%\" }}\r\n      >\r\n        {/* <img src={logo} className=\"logo\" alt=\"logo\" /> */}\r\n        <MarketPlace />\r\n      </motion.div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}